{
  "common": {
    "required": "Required",
    "work_in_progress": "Work in progress",
    "processing": "Processing..."
  },
  "status": {
    "title": "Status",
    "app_instance": "App instance",
    "services": "Service | Services",
    "app_images": "App image | App images",
    "app_volumes": "App volume | App volumes",
    "installation_node": "Installation node",
    "node": "Node",
    "name": "Name",
    "size": "Size",
    "created": "Created",
    "mount": "Mount",
    "no_services": "No services",
    "no_images": "No images",
    "no_volumes": "No volumes"
  },
  "settings": {
    "title": "Settings",
    "piler_fqdn": "piler FQDN",
    "imap_fqdn": "IMAP server FQDN (user authentication)",
    "save": "Save",
    "lets_encrypt": "Let's Encrypt",
    "http_to_https": "HTTP to HTTPS",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "instance_configuration": "Configure {instance}",
    "configuring": "Configuring...",
    "domain_already_used_in_traefik": "This domain is already used in traefik",
    "placeholder_piler_domain": "Type a fully qualified domain name",
    "placeholder_imap_server": "Type a fully qualified domain name",
    "tcp_port_archive": "SMTP TCP port of the archive",
    "tcp_port_archive_tooltips": "You must send for each domain an hidden copy (Bcc) of received emails to <b>archive@{host}</b> on the smtp {port}/TCP.<br/> For this point you must make a custom transport on your email server :<br/><br/><b>{host} smtp:[{host}]:{port}</b><br/><br/> This can be achieved by the Relay menu of Email application, create a recipent relay host"
  },
  "about": {
    "title": "About"
  },
  "task": {
    "cannot_create_task": "Cannot create task {action}"
  },
  "action": {
    "get-status": "Get status",
    "get-configuration": "Get configuration",
    "configure-module": "Configure module",
    "get-module-info": "Get module info",
    "get-name": "Get name",
    "list-backup-repositories": "List backup repositories",
    "list-backups": "List backups",
    "list-installed-modules": "List installed modules"
  },
  "error": {
    "error": "Error",
    "generic_error": "Something went wrong",
    "validation_error": "Validation error",
    "network_error": "Network error",
    "network_timeout": "Network timeout",
    "401": "Invalid authentication",
    "403": "Operation not authorized",
    "404": "Resource not found",
    "cannot_retrieve_module_info": "Cannot retrieve module info",
    "cannot_retrieve_installed_modules": "Cannot retrieve installed modules"
  }
}
