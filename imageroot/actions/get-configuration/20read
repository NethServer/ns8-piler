#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import os
import json
import sys
import agent
import subprocess

# Prepare return variable
config = {}

config["host"] = os.environ.get("TRAEFIK_HOST",'')
config["http2https"] =  os.environ.get("TRAEFIK_HTTP2HTTPS","False") == "True"
config["lets_encrypt"] =  os.environ.get("TRAEFIK_LETS_ENCRYPT","False") == "True"
config["mail_server"] = os.getenv("MAIL_SERVER", "")

rdb = agent.redis_connect() # full read-only access on every key
modules=[]
# we query about all mail server to use it inside the user interface
for key in agent.list_service_providers(rdb,'imap','tcp'):
    obj = {
        "name": key['module_id'],
        "label": key['module_id'] + ' ('+key['mail_hostname']+')',
        "value": key['module_uuid'],
    }
    modules.append(obj)

# use it inside a dropdown
config['mail_server_URL'] = modules

command = "/usr/bin/podman exec mariadb-app mysql -u root -D piler -e 'SELECT password FROM user WHERE uid=0;'"
output = subprocess.run(command, shell=True, capture_output=True, text=True)
is_found_admin = '$1$PItc7d$zsUgON3JRrbdGS11t9JQW1' in output.stdout

command = "/usr/bin/podman exec mariadb-app mysql -u root -D piler -e 'SELECT password FROM user WHERE uid=1;'"
output = subprocess.run(command, shell=True, capture_output=True, text=True)
is_found_auditor = "$1$SLIIIS$JMBwGqQg4lIir2P2YU1y.0" in output.stdout

config['is_default_password'] = True if is_found_admin or is_found_auditor else False

import_running = subprocess.run(['systemctl', '--user', 'is-active', "import-email-to-piler.service"], capture_output=True, text=True)
config['import_email_is_running'] = True if import_running.stdout.strip() == 'active' else False

piler_running = subprocess.run(['systemctl', '--user', 'is-active', "piler-app.service"], capture_output=True, text=True)
config['piler_is_running'] = True if piler_running.stdout.strip() == 'active' else False

# Dump the configuratio to stdout
json.dump(config, fp=sys.stdout)
