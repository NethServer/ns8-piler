#!/usr/bin/env python3

#
# Copyright (C) 2024 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import subprocess
import sys
import os
import agent
import argparse

parser = argparse.ArgumentParser(description='Script for importing user mailboxes from an IMAP server into the mail piler archive')
parser.add_argument('-A', '--after', metavar='AFTER_TIMESTAMP', type=str,
                    help='Import emails after the specified value (unix timestamp)')
parser.add_argument('-B', '--before', metavar='BEFORE_TIMESTAMP', type=str,
                    help='Import emails before the specified value (unix timestamp)')

args = parser.parse_args()

timestamp = []

if args.after is not None:
    print("Import emails after timestamp:", args.after,  file=sys.stderr)
    timestamp += ['-A', args.after]
elif args.before is not None:
    print("Import emails before timestamp:", args.before,  file=sys.stderr)
    timestamp += ['-B', args.before]

rdb = agent.redis_connect()

providers = agent.list_service_providers(rdb, 'imap', 'tcp', {
    'module_uuid': os.environ['MAIL_SERVER'],
})

if providers:
    mail_id = providers[0]["module_id"]
    ip_address = providers[0]["host"]

    # retrieve the list of users
    response = agent.tasks.run(f"module/{mail_id}", action='list-user-mailboxes')
    agent.assert_exp(response['exit_code'] == 0)

    # Extract user names into a list
    user_list = [user_data["user"] for user_data in response['output'].get("user_mailboxes")]

    # retrieve the vmail password
    response = agent.tasks.run(f"module/{mail_id}", action='reveal-master-credentials')
    agent.assert_exp(response['exit_code'] == 0)
    password = response['output']['password']

    for user in user_list:
        try:
            print(f"### Importing {user} to {os.environ['MODULE_ID']}", file=sys.stderr)

            subprocess.run([
                '/usr/bin/podman', 'exec', '-w', '/var/piler/imap', '-u', 'piler', 'piler-app',
                '/usr/bin/pilerimport', '-Z', '200', *timestamp , '-i',  ip_address, '-u',  f'{user}*vmail', '-p', password, '-P', '993'
            ])
        except Exception as e:
            print(f"### Error to import {user} to {os.environ['MODULE_ID']}: {e}", file=sys.stderr)
            continue
